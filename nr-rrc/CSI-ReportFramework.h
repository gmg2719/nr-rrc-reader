/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "38331-f60.asn"
 * 	`asn1c -fcompound-names -findirect-choice -gen-PER -pdu=all -no-gen-example -fincludes-quoted -funnamed-unions -D nr-rrc`
 */

#ifndef	_CSI_ReportFramework_H_
#define	_CSI_ReportFramework_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeInteger.h"
#include "NativeEnumerated.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC {
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n3	= 0,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n7	= 1,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n15	= 2,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n31	= 3,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n63	= 4,
	CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC_n128	= 5
} e_CSI_ReportFramework__maxNumberAperiodicCSI_triggeringStatePerCC;

/* CSI-ReportFramework */
typedef struct CSI_ReportFramework {
	long	 maxNumberPeriodicCSI_PerBWP_ForCSI_Report;
	long	 maxNumberAperiodicCSI_PerBWP_ForCSI_Report;
	long	 maxNumberSemiPersistentCSI_PerBWP_ForCSI_Report;
	long	 maxNumberPeriodicCSI_PerBWP_ForBeamReport;
	long	 maxNumberAperiodicCSI_PerBWP_ForBeamReport;
	long	 maxNumberAperiodicCSI_triggeringStatePerCC;
	long	 maxNumberSemiPersistentCSI_PerBWP_ForBeamReport;
	long	 simultaneousCSI_ReportsPerCC;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} CSI_ReportFramework_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_maxNumberAperiodicCSI_triggeringStatePerCC_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_CSI_ReportFramework;
extern asn_SEQUENCE_specifics_t asn_SPC_CSI_ReportFramework_specs_1;
extern asn_TYPE_member_t asn_MBR_CSI_ReportFramework_1[8];

#ifdef __cplusplus
}
#endif

#endif	/* _CSI_ReportFramework_H_ */
#include "asn_internal.h"
