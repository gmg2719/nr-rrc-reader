/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "38331-f60.asn"
 * 	`asn1c -fcompound-names -findirect-choice -gen-PER -pdu=all -no-gen-example -fincludes-quoted -funnamed-unions -D nr-rrc`
 */

#ifndef	_PUCCH_Config_H_
#define	_PUCCH_Config_H_


#include "asn_application.h"

/* Including external dependencies */
#include "asn_SEQUENCE_OF.h"
#include "constr_SEQUENCE_OF.h"
#include "PUCCH-ResourceSetId.h"
#include "PUCCH-ResourceId.h"
#include "SchedulingRequestResourceId.h"
#include "NativeInteger.h"
#include "PUCCH-SpatialRelationInfoId.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Forward declarations */
struct SetupRelease_PUCCH_FormatConfig;
struct PUCCH_PowerControl;
struct PUCCH_ResourceSet;
struct PUCCH_Resource;
struct SchedulingRequestResourceConfig;
struct PUCCH_SpatialRelationInfo;

/* PUCCH-Config */
typedef struct PUCCH_Config {
	struct PUCCH_Config__resourceSetToAddModList {
		A_SEQUENCE_OF(struct PUCCH_ResourceSet) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *resourceSetToAddModList;
	struct PUCCH_Config__resourceSetToReleaseList {
		A_SEQUENCE_OF(PUCCH_ResourceSetId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *resourceSetToReleaseList;
	struct PUCCH_Config__resourceToAddModList {
		A_SEQUENCE_OF(struct PUCCH_Resource) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *resourceToAddModList;
	struct PUCCH_Config__resourceToReleaseList {
		A_SEQUENCE_OF(PUCCH_ResourceId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *resourceToReleaseList;
	struct SetupRelease_PUCCH_FormatConfig	*format1;	/* OPTIONAL */
	struct SetupRelease_PUCCH_FormatConfig	*format2;	/* OPTIONAL */
	struct SetupRelease_PUCCH_FormatConfig	*format3;	/* OPTIONAL */
	struct SetupRelease_PUCCH_FormatConfig	*format4;	/* OPTIONAL */
	struct PUCCH_Config__schedulingRequestResourceToAddModList {
		A_SEQUENCE_OF(struct SchedulingRequestResourceConfig) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *schedulingRequestResourceToAddModList;
	struct PUCCH_Config__schedulingRequestResourceToReleaseList {
		A_SEQUENCE_OF(SchedulingRequestResourceId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *schedulingRequestResourceToReleaseList;
	struct PUCCH_Config__multi_CSI_PUCCH_ResourceList {
		A_SEQUENCE_OF(PUCCH_ResourceId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *multi_CSI_PUCCH_ResourceList;
	struct PUCCH_Config__dl_DataToUL_ACK {
		A_SEQUENCE_OF(long) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *dl_DataToUL_ACK;
	struct PUCCH_Config__spatialRelationInfoToAddModList {
		A_SEQUENCE_OF(struct PUCCH_SpatialRelationInfo) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *spatialRelationInfoToAddModList;
	struct PUCCH_Config__spatialRelationInfoToReleaseList {
		A_SEQUENCE_OF(PUCCH_SpatialRelationInfoId_t) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *spatialRelationInfoToReleaseList;
	struct PUCCH_PowerControl	*pucch_PowerControl;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PUCCH_Config_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PUCCH_Config;
extern asn_SEQUENCE_specifics_t asn_SPC_PUCCH_Config_specs_1;
extern asn_TYPE_member_t asn_MBR_PUCCH_Config_1[15];

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "SetupRelease.h"
#include "PUCCH-PowerControl.h"
#include "PUCCH-ResourceSet.h"
#include "PUCCH-Resource.h"
#include "SchedulingRequestResourceConfig.h"
#include "PUCCH-SpatialRelationInfo.h"

#endif	/* _PUCCH_Config_H_ */
#include "asn_internal.h"
